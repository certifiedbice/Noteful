{"version":3,"sources":["CircleButton/CircleButton.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","findNote","notes","arguments","length","undefined","noteId","find","note","id","parseInt","countNotesForFolder","folderId","filter","folder_id","NoteListNav","react_default","a","folders","map","folder","key","NavLink","to","concat","folder_name","Link","type","react_fontawesome_index_es","icon","NotePageNav","role","onClick","history","goBack","Note","name","format","modified","NoteListMain","Note_Note","note_name","NotePageMain","content","split","para","i","App","state","_this2","this","Promise","all","fetch","then","_ref","_ref2","slicedToArray","notesRes","foldersRes","ok","json","e","reject","_ref3","_ref4","setState","catch","error","console","_this$state","Fragment","path","Route","exact","render","routeProps","NoteListNav_NoteListNav","assign","match","params","findFolder","NotePageNav_NotePageNav","component","_this$state2","notesForFolder","getNotesForFolder","NoteListMain_NoteListMain","NotePageMain_NotePageMain","renderNavRoutes","renderMainRoutes","Component","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","BrowserRouter","src_App_App","document","getElementById"],"mappings":"4WAGe,SAASA,EAAgBC,GACeA,EAA7CC,IAA6CD,EAAxCE,UAAwCF,EAA7BG,UADqB,IACPC,EADOC,OAAAC,EAAA,EAAAD,CACQL,EADR,iCAG7C,OAAOO,IAAMC,cACXR,EAAMC,IADDI,OAAAI,EAAA,EAAAJ,CAAA,CAGHH,UAAW,CAAC,kBAAmBF,EAAME,WAAWQ,KAAK,MAClDN,GAELJ,EAAMW,UAIVZ,EAAgBa,aAAc,CAC5BX,IAAK,KChBA,IAGMY,EAAW,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIG,EAAXH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACtBH,EAAMK,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOC,SAASJ,MAQ7BK,EAAsB,eAACT,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIS,EAAXT,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACjCH,EAAMW,OAAO,SAAAL,GAAI,OAAIA,EAAKM,YAAcF,IAAUR,cCPrC,SAASW,EAAY3B,GAClC,OACE4B,EAAAC,EAAArB,cAAA,OAAKN,UAAU,eACb0B,EAAAC,EAAArB,cAAA,MAAIN,UAAU,qBACXF,EAAM8B,QAAQC,IAAI,SAAAC,GAAM,OACvBJ,EAAAC,EAAArB,cAAA,MAAIyB,IAAKD,EAAOX,IACdO,EAAAC,EAAArB,cAAC0B,EAAA,EAAD,CACEhC,UAAU,2BACViC,GAAE,WAAAC,OAAaJ,EAAOX,KAEtBO,EAAAC,EAAArB,cAAA,QAAMN,UAAU,0BACbqB,EAAoBvB,EAAMc,MAAOkB,EAAOX,KAE1CW,EAAOK,iBAKhBT,EAAAC,EAAArB,cAAA,OAAKN,UAAU,+BACb0B,EAAAC,EAAArB,cAACT,EAAD,CACEE,IAAKqC,IACLH,GAAG,cACHI,KAAK,SACLrC,UAAU,kCAEV0B,EAAAC,EAAArB,cAACgC,EAAA,EAAD,CAAiBC,KAAK,SACtBb,EAAAC,EAAArB,cAAA,WAPF,YAeRmB,EAAYf,aAAe,CACzBkB,QAAS,UCrCI,SAASY,EAAY1C,GAClC,OACE4B,EAAAC,EAAArB,cAAA,OAAKN,UAAU,eACb0B,EAAAC,EAAArB,cAACT,EAAD,CACEE,IAAI,SACJ0C,KAAK,OACLC,QAAS,kBAAI5C,EAAM6C,QAAQC,UAC3B5C,UAAU,4BAEV0B,EAAAC,EAAArB,cAACgC,EAAA,EAAD,CAAiBC,KAAK,iBACtBb,EAAAC,EAAArB,cAAA,WAPF,QAUCR,EAAMgC,QACLJ,EAAAC,EAAArB,cAAA,MAAIN,UAAU,4BACXF,EAAMgC,OAAOK,cAOxBK,EAAY9B,aAAe,CACzBiC,QAAS,CACPC,OAAQ,kCCvBG,SAASC,EAAK/C,GAC3B,OACE4B,EAAAC,EAAArB,cAAA,OAAKN,UAAU,QACb0B,EAAAC,EAAArB,cAAA,MAAIN,UAAU,eACZ0B,EAAAC,EAAArB,cAAC8B,EAAA,EAAD,CAAMH,GAAE,SAAAC,OAAWpC,EAAMqB,KACtBrB,EAAMgD,OAGXpB,EAAAC,EAAArB,cAAA,UAAQN,UAAU,eAAeqC,KAAK,UACpCX,EAAAC,EAAArB,cAACgC,EAAA,EAAD,CAAiBC,KAAK,cACrB,IAFH,UAKAb,EAAAC,EAAArB,cAAA,OAAKN,UAAU,eACb0B,EAAAC,EAAArB,cAAA,OAAKN,UAAU,wBAAf,WAEG,IACD0B,EAAAC,EAAArB,cAAA,QAAMN,UAAU,QACb+C,iBAAOjD,EAAMkD,SAAU,0BCjBrB,SAASC,EAAanD,GACnC,OACE4B,EAAAC,EAAArB,cAAA,WAASN,UAAU,gBACjB0B,EAAAC,EAAArB,cAAA,UACGR,EAAMc,MAAMiB,IAAI,SAAAX,GAAI,OACnBQ,EAAAC,EAAArB,cAAA,MAAIyB,IAAKb,EAAKC,IACZO,EAAAC,EAAArB,cAAC4C,EAAD,CACE/B,GAAID,EAAKC,GACT2B,KAAM5B,EAAKiC,UACXH,SAAU9B,EAAK8B,eAKvBtB,EAAAC,EAAArB,cAAA,OAAKN,UAAU,kCACb0B,EAAAC,EAAArB,cAACT,EAAD,CACEE,IAAKqC,IACLH,GAAG,YACHI,KAAK,SACLrC,UAAU,iCAEV0B,EAAAC,EAAArB,cAACgC,EAAA,EAAD,CAAiBC,KAAK,SACtBb,EAAAC,EAAArB,cAAA,WAPF,UAeR2C,EAAavC,aAAe,CAC1BE,MAAO,WClCM,SAASwC,EAAatD,GACnC,OACE4B,EAAAC,EAAArB,cAAA,WAASN,UAAU,gBACjB0B,EAAAC,EAAArB,cAAC4C,EAAD,CACE/B,GAAIrB,EAAMoB,KAAKC,GACf2B,KAAMhD,EAAMoB,KAAKiC,UACjBH,SAAUlD,EAAMoB,KAAK8B,WAEvBtB,EAAAC,EAAArB,cAAA,OAAKN,UAAU,yBACZF,EAAMoB,KAAKmC,QAAQC,MAAM,YAAYzB,IAAI,SAAC0B,EAAMC,GAAP,OACxC9B,EAAAC,EAAArB,cAAA,KAAGyB,IAAKyB,GAAID,OAOtBH,EAAa1C,aAAe,CAC1BQ,KAAM,CACJmC,QAAS,gBCmGEI,6MA/GXC,MAAQ,CACJ9C,MAAO,GACPgB,QAAS,uFAGO,IAAA+B,EAAAC,KAChBC,QAAQC,IAAI,CACRC,MAAM,mCACNA,MAAM,uCAELC,KAAK,SAAAC,GAA4B,IAAAC,EAAA/D,OAAAgE,EAAA,EAAAhE,CAAA8D,EAAA,GAA1BG,EAA0BF,EAAA,GAAhBG,EAAgBH,EAAA,GAC9B,OAAKE,EAASE,GAETD,EAAWC,GAGTT,QAAQC,IAAI,CAACM,EAASG,OAAQF,EAAWE,SAFrCF,EAAWE,OAAOP,KAAK,SAAAQ,GAAC,OAAIX,QAAQY,OAAOD,KAF3CJ,EAASG,OAAOP,KAAK,SAAAQ,GAAC,OAAIX,QAAQY,OAAOD,OAMvDR,KAAK,SAAAU,GAAsB,IAAAC,EAAAxE,OAAAgE,EAAA,EAAAhE,CAAAuE,EAAA,GAApB9D,EAAoB+D,EAAA,GAAb/C,EAAa+C,EAAA,GACxBhB,EAAKiB,SAAS,CAAChE,QAAOgB,cAEzBiD,MAAM,SAAAC,GACHC,QAAQD,MAAM,CAACA,sDAIT,IAAAE,EACWpB,KAAKF,MAAvB9C,EADOoE,EACPpE,MAAOgB,EADAoD,EACApD,QACd,OACIF,EAAAC,EAAArB,cAAAoB,EAAAC,EAAAsD,SAAA,KACK,CAAC,IAAK,qBAAqBpD,IAAI,SAAAqD,GAAI,OAChCxD,EAAAC,EAAArB,cAAC6E,EAAA,EAAD,CACIC,OAAK,EACLrD,IAAKmD,EACLA,KAAMA,EACNG,OAAQ,SAAAC,GAAU,OACd5D,EAAAC,EAAArB,cAACiF,EAADpF,OAAAqF,OAAA,CACI5D,QAASA,EACThB,MAAOA,GACH0E,SAKpB5D,EAAAC,EAAArB,cAAC6E,EAAA,EAAD,CACID,KAAK,gBACLG,OAAQ,SAAAC,GAAc,IACXtE,EAAUsE,EAAWG,MAAMC,OAA3B1E,OACDE,EAAOP,EAASC,EAAOI,IAAW,GAClCc,EN3DJ,eAACF,EAADf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAS,GAAIS,EAAbT,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACxBa,EAAQX,KAAK,SAAAa,GAAM,OAAIA,EAAOX,KAAOC,SAASE,KM0DTqE,CAAW/D,EAASV,EAAKM,WACxC,OAAOE,EAAAC,EAAArB,cAACsF,EAADzF,OAAAqF,OAAA,GAAiBF,EAAjB,CAA6BxD,OAAQA,QAGpDJ,EAAAC,EAAArB,cAAC6E,EAAA,EAAD,CAAOD,KAAK,cAAcW,UAAWrD,IACrCd,EAAAC,EAAArB,cAAC6E,EAAA,EAAD,CAAOD,KAAK,YAAYW,UAAWrD,gDAK5B,IAAAsD,EACUlC,KAAKF,MAAvB9C,EADQkF,EACRlF,MADQkF,EACDlE,QACd,OACIF,EAAAC,EAAArB,cAAAoB,EAAAC,EAAAsD,SAAA,KACK,CAAC,IAAK,qBAAqBpD,IAAI,SAAAqD,GAAI,OAChCxD,EAAAC,EAAArB,cAAC6E,EAAA,EAAD,CACIC,OAAK,EACLrD,IAAKmD,EACLA,KAAMA,EACNG,OAAQ,SAAAC,GAAc,IACXhE,EAAYgE,EAAWG,MAAMC,OAA7BpE,SACDyE,EN1ED,eAACnF,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIS,EAAXT,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAC7BO,EAEEV,EAAMW,OAAO,SAAAL,GAAI,OAAIA,EAAKM,YAAcJ,SAASE,KADjDV,EMwE6CoF,CACnBpF,EACAU,GAEJ,OACII,EAAAC,EAAArB,cAAC2F,EAAD9F,OAAAqF,OAAA,GACQF,EADR,CAEI1E,MAAOmF,UAM3BrE,EAAAC,EAAArB,cAAC6E,EAAA,EAAD,CACID,KAAK,gBACLG,OAAQ,SAAAC,GAAc,IACXtE,EAAUsE,EAAWG,MAAMC,OAA3B1E,OACDE,EAAOP,EAASC,EAAOI,GAC7B,OAAOU,EAAAC,EAAArB,cAAC4F,EAAD/F,OAAAqF,OAAA,GAAkBF,EAAlB,CAA8BpE,KAAMA,0CAQ3D,OACIQ,EAAAC,EAAArB,cAAA,OAAKN,UAAU,OACX0B,EAAAC,EAAArB,cAAA,OAAKN,UAAU,YAAY4D,KAAKuC,mBAChCzE,EAAAC,EAAArB,cAAA,UAAQN,UAAU,eACd0B,EAAAC,EAAArB,cAAA,UACIoB,EAAAC,EAAArB,cAAC8B,EAAA,EAAD,CAAMH,GAAG,KAAT,WAA4B,IAC5BP,EAAAC,EAAArB,cAACgC,EAAA,EAAD,CAAiBC,KAAK,mBAG9Bb,EAAAC,EAAArB,cAAA,QAAMN,UAAU,aAAa4D,KAAKwC,4BA1GhCC,aCClBC,IAAQC,IAAIC,IAAQC,IAAeC,IAAYC,KAE/CC,IAASvB,OACP3D,EAAAC,EAAArB,cAACuG,EAAA,EAAD,KACEnF,EAAAC,EAAArB,cAACwG,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.20610a01.chunk.js","sourcesContent":["import React from 'react'\r\nimport './CircleButton.css'\r\n\r\nexport default function NavCircleButton(props) {\r\n  const { tag, className, childrenm, ...otherProps } = props\r\n\r\n  return React.createElement(\r\n    props.tag,\r\n    {\r\n      className: ['NavCircleButton', props.className].join(' '),\r\n      ...otherProps\r\n    },\r\n    props.children\r\n  )\r\n}\r\n\r\nNavCircleButton.defaultProps ={\r\n  tag: 'a',\r\n}\r\n","\r\nexport const findFolder = (folders=[], folderId) =>\r\n  folders.find(folder => folder.id === parseInt(folderId))\r\n\r\nexport const findNote = (notes=[], noteId) =>\r\n  notes.find(note => note.id === parseInt(noteId))\r\n\r\nexport const getNotesForFolder = (notes=[], folderId) => (\r\n  (!folderId)\r\n    ? notes\r\n    : notes.filter(note => note.folder_id === parseInt(folderId))\r\n)\r\n\r\nexport const countNotesForFolder = (notes=[], folderId) =>\r\n  notes.filter(note => note.folder_id === folderId).length\r\n","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport { countNotesForFolder } from '../notes-helpers'\r\nimport './NoteListNav.css'\r\n\r\nexport default function NoteListNav(props) {\r\n  return (\r\n    <div className='NoteListNav'>\r\n      <ul className='NoteListNav__list'>\r\n        {props.folders.map(folder =>\r\n          <li key={folder.id}>\r\n            <NavLink\r\n              className='NoteListNav__folder-link'\r\n              to={`/folder/${folder.id}`}\r\n            >\r\n              <span className='NoteListNav__num-notes'>\r\n                {countNotesForFolder(props.notes, folder.id)}\r\n              </span>\r\n              {folder.folder_name}\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <div className='NoteListNav__button-wrapper'>\r\n        <CircleButton\r\n          tag={Link}\r\n          to='/add-folder'\r\n          type='button'\r\n          className='NoteListNav__add-folder-button'\r\n        >\r\n          <FontAwesomeIcon icon='plus' />\r\n          <br />\r\n          Folder\r\n        </CircleButton>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nNoteListNav.defaultProps = {\r\n  folders: []\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport './NotePageNav.css'\r\n\r\nexport default function NotePageNav(props) {\r\n  return (\r\n    <div className='NotePageNav'>\r\n      <CircleButton\r\n        tag='button'\r\n        role='link'\r\n        onClick={()=>props.history.goBack()}\r\n        className='NotePageNav__back-button'\r\n      >\r\n        <FontAwesomeIcon icon='chevron-left' />\r\n        <br />\r\n        Back\r\n      </CircleButton>\r\n      {props.folder && (\r\n        <h3 className='NotePageNav__folder-name'>\r\n          {props.folder.folder_name}\r\n        </h3>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nNotePageNav.defaultProps = {\r\n  history: {\r\n    goBack: () => {}\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './Note.css'\r\n\r\nexport default function Note(props) {\r\n  return (\r\n    <div className='Note'>\r\n      <h2 className='Note__title'>\r\n        <Link to={`/note/${props.id}`}>\r\n          {props.name}\r\n        </Link>\r\n      </h2>\r\n      <button className='Note__delete' type='button'>\r\n        <FontAwesomeIcon icon='trash-alt' />\r\n        {' '}\r\n        remove\r\n      </button>\r\n      <div className='Note__dates'>\r\n        <div className='Note__dates-modified'>\r\n          Modified\r\n          {' '}\r\n          <span className='Date'>\r\n            {format(props.modified, 'Do MMM YYYY')}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Note from '../Note/Note'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport './NoteListMain.css'\r\n\r\nexport default function NoteListMain(props) {\r\n  return (\r\n    <section className='NoteListMain'>\r\n      <ul>\r\n        {props.notes.map(note =>\r\n          <li key={note.id}>\r\n            <Note\r\n              id={note.id}\r\n              name={note.note_name}\r\n              modified={note.modified}\r\n            />\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <div className='NoteListMain__button-container'>\r\n        <CircleButton\r\n          tag={Link}\r\n          to='/add-note'\r\n          type='button'\r\n          className='NoteListMain__add-note-button'\r\n        >\r\n          <FontAwesomeIcon icon='plus' />\r\n          <br />\r\n          Note\r\n        </CircleButton>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nNoteListMain.defaultProps = {\r\n  notes: [],\r\n}\r\n","import React from 'react'\r\nimport Note from '../Note/Note'\r\nimport './NotePageMain.css'\r\n\r\nexport default function NotePageMain(props) {\r\n  return (\r\n    <section className='NotePageMain'>\r\n      <Note\r\n        id={props.note.id}\r\n        name={props.note.note_name}\r\n        modified={props.note.modified}\r\n      />\r\n      <div className='NotePageMain__content'>\r\n        {props.note.content.split(/\\n \\r|\\n/).map((para, i) =>\r\n          <p key={i}>{para}</p>\r\n        )}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nNotePageMain.defaultProps = {\r\n  note: {\r\n    content: '',\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport NoteListNav from '../NoteListNav/NoteListNav';\r\nimport NotePageNav from '../NotePageNav/NotePageNav';\r\nimport NoteListMain from '../NoteListMain/NoteListMain';\r\nimport NotePageMain from '../NotePageMain/NotePageMain';\r\nimport {getNotesForFolder, findNote, findFolder} from '../notes-helpers';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        notes: [],\r\n        folders: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n            fetch('http://localhost:8000/api/notes'),\r\n            fetch('http://localhost:8000/api/folders')\r\n        ])\r\n            .then(([notesRes, foldersRes]) => {\r\n                if (!notesRes.ok)\r\n                    return notesRes.json().then(e => Promise.reject(e));\r\n                if (!foldersRes.ok)\r\n                    return foldersRes.json().then(e => Promise.reject(e));\r\n\r\n                return Promise.all([notesRes.json(), foldersRes.json()]);\r\n            })\r\n            .then(([notes, folders]) => {\r\n                this.setState({notes, folders});\r\n            })\r\n            .catch(error => {\r\n                console.error({error});\r\n            });\r\n    }\r\n\r\n    renderNavRoutes() {\r\n        const {notes, folders} = this.state;\r\n        return (\r\n            <>\r\n                {['/', '/folder/:folderId'].map(path => (\r\n                    <Route\r\n                        exact\r\n                        key={path}\r\n                        path={path}\r\n                        render={routeProps => (\r\n                            <NoteListNav\r\n                                folders={folders}\r\n                                notes={notes}\r\n                                {...routeProps}\r\n                            />\r\n                        )}\r\n                    />\r\n                ))}\r\n                <Route\r\n                    path=\"/note/:noteId\"\r\n                    render={routeProps => {\r\n                        const {noteId} = routeProps.match.params;\r\n                        const note = findNote(notes, noteId) || {};\r\n                        const folder = findFolder(folders, note.folder_id);\r\n                        return <NotePageNav {...routeProps} folder={folder} />;\r\n                    }}\r\n                />\r\n                <Route path=\"/add-folder\" component={NotePageNav} />\r\n                <Route path=\"/add-note\" component={NotePageNav} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderMainRoutes() {\r\n        const {notes, folders} = this.state;\r\n        return (\r\n            <>\r\n                {['/', '/folder/:folderId'].map(path => (\r\n                    <Route\r\n                        exact\r\n                        key={path}\r\n                        path={path}\r\n                        render={routeProps => {\r\n                            const {folderId} = routeProps.match.params;\r\n                            const notesForFolder = getNotesForFolder(\r\n                                notes,\r\n                                folderId\r\n                            );\r\n                            return (\r\n                                <NoteListMain\r\n                                    {...routeProps}\r\n                                    notes={notesForFolder}\r\n                                />\r\n                            );\r\n                        }}\r\n                    />\r\n                ))}\r\n                <Route\r\n                    path=\"/note/:noteId\"\r\n                    render={routeProps => {\r\n                        const {noteId} = routeProps.match.params;\r\n                        const note = findNote(notes, noteId);\r\n                        return <NotePageMain {...routeProps} note={note} />;\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\r\n                <header className=\"App__header\">\r\n                    <h1>\r\n                        <Link to=\"/\">Noteful</Link>{' '}\r\n                        <FontAwesomeIcon icon=\"check-double\" />\r\n                    </h1>\r\n                </header>\r\n                <main className=\"App__main\">{this.renderMainRoutes()}</main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport 'typeface-roboto'\r\nimport './index.css'\r\nimport App from './App/App'\r\n\r\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}